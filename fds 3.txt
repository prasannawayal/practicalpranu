Assignment No.:- 3 
 

Name :- Wayal Prasanna Ganesh
Class :- T.Y.B.Sc (Computer Science) 
Div :- B 
RollNo.:- 59
Batch :- D
Subject:-CS354-FoundationsOfDataScience
Practical Name :- Data Preprocessing 
Performance Date :- Submission Date :- 

 
Set-A 
Que.) Data.csv have two categorical column (the country column, and the 
purchased column). 
a. Apply OneHot coding on Country column. 
b. Apply Label encoding on purchased column 

Program :- 

import pandas as pd 
from sklearn.preprocessing import OneHotEncoder,LabelEncoder 
data=pd.read_csv("C:/Users/samarth/Desktop/data.csv") 
print("Original Data:") 
print(data) 
ohe=OneHotEncoder() 
country_encoded=ohe.fit_transform(data[['Country']]).toarray() 
country_df=pd.DataFrame(country_encoded,columns=ohe.get_feature_names_out(['Cou 
ntry'])) 
data=pd.concat([data,country_df],axis=1) 
le=LabelEncoder() 
data['Purchased_Encoded']=le.fit_transform(data['Purchased']) 
print("\nTransformed Data:") 
print(data) 

 
Output:- 
Original Data:    

Country Age Salary Purchased 
0 France 44.0 72000.0 No 
1 Spain 27.0 48000.0 Yes 



 

2 Germany 30.0 54000.0 No 
3 Spain 38.0 61000.0 No 
4 Germany 40.0 NaN Yes 
5 France 35.0 58000.0 Yes 
6 Spain NaN 52000.0 No 
7 France 48.0 79000.0 Yes 
8 Germany 50.0 83000.0 No 
9 France 37.0 67000.0 Yes 

 
Transformed Data: 

Country Age Salary Purchased Country_France  Country_Germany \ 
0 France 44.0 72000.0 No 1.0 0.0 
1 Spain 27.0 48000.0 Yes 0.0 0.0 
2 Germany 30.0 54000.0 No 0.0 1.0 
3 Spain 38.0 61000.0 No 0.0 0.0 
4 Germany 40.0 NaN Yes 0.0 1.0 
5 France 35.0 58000.0 Yes 1.0 0.0 
6 Spain NaN 52000.0 No 0.0 0.0 
7 France 48.0 79000.0 Yes 1.0 0.0 
8 Germany 50.0 83000.0 No 0.0 1.0 
9 France 37.0 67000.0 Yes 1.0 0.0 

 
Country_Spain Purchased_Encoded 

0 0.0 0 
1 1.0 1 
2 0.0 0 
3 1.0 0 
4 0.0 1 
5 0.0 1 
6 1.0 0 
7 0.0 1 
8 0.0 0 
9 0.0 1 

 
1 

 
Set-B 



Que.) Write a program in python to perform following task 
1. Import Dataset from above link. 
2. Rescaling: Normalised the dataset using MinMaxScaler class 
3. Standardizing Data (transform them into a standard Gaussian distribution with a 
mean of 0 and a standard deviation of 1) 
4. Normalizing Data ( rescale each observation to a length of 1 (a unit norm). For 

this, use the Normalizer class.) 
5. Binarizing Data using we use the Binarizer class (Using a binary threshold, it is 
possible to transform our data by marking the values above it 1 and those equal to 
or below it, 0) 

 
Program :- 

 
import pandas as pd 
#step 1:Import Dataset from URL 
from sklearn.preprocessing import MinMaxScaler,StandardScaler,Normalizer,Binarizer 
url="http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality- 
red.csv" 
data=pd.read_csv(url,sep=';') 
print("Original Dataset (first 5 rows:") 
print(data.head()) 
#step 2:Rescaling using MinMaxScalar 
minmax_scaler=MinMaxScaler() 
rescaled_data=minmax_scaler.fit_transform(data) 
rescaled_df=pd.DataFrame(rescaled_data,columns=data.columns) 
print("\n RescaledDataset(Min-Max Scaling,first 5 rows):") 
print(rescaled_df.head()) 
#step 3: Standardizing Data 
standard_scaler=StandardScaler() 
standardized_data=standard_scaler.fit_transform(data) 
standardized_df=pd.DataFrame(standardized_data,columns=data.columns) 
print("\nStandardized Dataset(Standard Scaling,first 5 rows):") 
print(standardized_df.head()) 
#step 4: Normalizing Data 
normalizer=Normalizer() 
normalized_data=normalizer.fit_transform(data) 
normalized_df=pd.DataFrame(normalized_data,columns=data.columns) 



print("\n Normalized dataset(Unit Norm per row,first 5 rows):") 
print(normalized_df.head()) 
#step 5: Binarizing Data 
binarizer=Binarizer(threshold=0.5) 
binarized_data=binarizer.fit_transform(data) 
binarized_df=pd.DataFrame(binarized_data,columns=data.columns) 
print("\n Binarized Dataset(Threshold=0.5,first 5 rows):") 
print(binarized_df.head()) 

 
Output :- 
Original Dataset (first 5 rows: 
 fixed acidity volatile acidity citric acid residual sugar chlorides \ 
0 7.4 0.70 0.00 1.9 0.076 
1 7.8 0.88 0.00 2.6 0.098 
2 7.8 0.76 0.04 2.3 0.092 
3 11.2 0.28 0.56 1.9 0.075 
4 7.4 0.70 0.00 1.9 0.076 
       

free sulfur dioxide total sulfur dioxide density pH sulphates \ 
0 11.0 34.0 0.9978 3.51 0.56  

1 25.0 67.0 0.9968 3.20 0.68  

2 15.0 54.0 0.9970 3.26 0.65  

3 17.0 60.0 0.9980 3.16 0.58  

4 11.0 34.0 0.9978 3.51 0.56  

   
alcohol quality 

0 9.4 5 
1 9.8 5 
2 9.8 5 
3 9.8 6 
4 9.4 5 

 
RescaledDataset(Min-Max Scaling,first 5 rows): 
 fixed acidity volatile acidity citric acid residual sugar chlorides \ 
0 0.247788 0.397260 0.00 0.068493 0.106845  

1 0.283186 0.520548 0.00 0.116438 0.143573  

2 0.283186 0.438356 0.04 0.095890 0.133556  



 

3 0.584071 0.109589 0.56 0.068493 0.105175 
4 0.247788 0.397260 0.00 0.068493 0.106845 
      

free sulfur dioxide total sulfur dioxide density pH sulphates \ 
0 0.140845 0.098940 0.567548 0.606299 0.137725 
1 0.338028 0.215548 0.494126 0.362205 0.209581 
2 0.197183 0.169611 0.508811 0.409449 0.191617 
3 0.225352 0.190813 0.582232 0.330709 0.149701 
4 0.140845 0.098940 0.567548 0.606299 0.137725 
   

alcohol quality 
0 0.153846 0.4 
1 0.215385 0.4 
2 0.215385 0.4 
3 0.215385 0.6 
4 0.153846 0.4 

 
Standardized Dataset(Standard Scaling,first 5 rows): 
 fixed acidity volatile acidity citric acid residual sugar chlorides \ 
0 -0.528360 0.961877 -1.391472 -0.453218 -0.243707 
1 -0.298547 1.967442 -1.391472 0.043416 0.223875 
2 -0.298547 1.297065 -1.186070 -0.169427 0.096353 
3 1.654856 -1.384443 1.484154 -0.453218 -0.264960 
4 -0.528360 0.961877 -1.391472 -0.453218 -0.243707 
      

free sulfur dioxide total sulfur dioxide density pH sulphates \ 
0 -0.466193 -0.379133 0.558274 1.288643 -0.579207 
1 0.872638 0.624363 0.028261 -0.719933 0.128950 
2 -0.083669 0.229047 0.134264 -0.331177 -0.048089 
3 0.107592 0.411500 0.664277 -0.979104 -0.461180 
4 -0.466193 -0.379133 0.558274 1.288643 -0.579207 
   

alcohol quality 
0 -0.960246 -0.787823 
1 -0.584777 -0.787823 
2 -0.584777 -0.787823 
3 -0.584777 0.450848 



4 -0.960246 -0.787823 

 
Normalized dataset(Unit Norm per row,first 5 rows): 
 fixed acidity volatile acidity citric acid residual sugar chlorides\ 
0 0.193478 0.018302 0.000000 0.049677 0.001987 
1 0.106989 0.012071 0.000000 0.035663 0.001344 
2 0.134949 0.013149 0.000692 0.039793 0.001592 
3 0.173611 0.004340 0.008681 0.029452 0.001163 
4 0.193478 0.018302 0.000000 0.049677 0.001987 
      

free sulfur dioxide total sulfur dioxide density pH sulphates \ 
0 0.287602 0.888952 0.026088 0.091771 0.014642 
1 0.342913 0.919006 0.013673 0.043893 0.009327 
2 0.259517 0.934261 0.017249 0.056402 0.011246 
3 0.263517 0.930059 0.015470 0.048983 0.008991 
4 0.287602 0.888952 0.026088 0.091771 0.014642 
   

alcohol quality 
0 0.245769 0.130728 
1 0.134422 0.068583 
2 0.169551 0.086506 
3 0.151910 0.093006 
4 0.245769 0.130728 

 
Binarized Dataset(Threshold=0.5,first 5 rows): 
 fixed acidity volatile acidity citric acid residual sugar chlorides \ 
0 1.0 1.0 0.0 1.0 0.0 
1 1.0 1.0 0.0 1.0 0.0 
2 1.0 1.0 0.0 1.0 0.0 
3 1.0 0.0 1.0 1.0 0.0 
4 1.0 1.0 0.0 1.0 0.0 
      

free sulfur dioxide total sulfur dioxide density pH sulphates \ 
0 1.0 1.0 1.0 1.0 1.0 
1 1.0 1.0 1.0 1.0 1.0 
2 1.0 1.0 1.0 1.0 1.0 
3 1.0 1.0 1.0 1.0 1.0 



 

4 1.0 1.0 1.0 1.0 1.0 
   

alcohol quality 
0 1.0 1.0 
1 1.0 1.0 
2 1.0 1.0 
3 1.0 1.0 
4 1.0 1.0 

 
Set-C 
Que.) Import dataset and perform Discretization of Continuous Data 
Dataset name: Student_bucketing.csv 
Dataset link: https://github.com/TrainingByPackt/Data-Science-with 
Python/blob/master/Chapter01/Data/Student_bucketing.csv 
The dataset consists of student details such as Student_id, Age, Grade, Employed, 
and marks. 
Write a program in python to perform following task 

1) Write python code to import the required libraries and load the dataset into a 
pandas dataframe. 
2) Display the first five rows of the dataframe. 
3) Discretized the marks column into five discrete buckets, the labels need to be 
populated accordingly with five values: Poor, Below_average, Average, 
Above_average, and Excellent. Perform bucketing using the cut () function on the 
marks column and display the top 10 columns. 

 
Program :- 

 
import pandas as pd 
data=pd.DataFrame({ 

'roll_no':[1,2,3,4,5,6,7,8,9,10], 
'marks':[85,65,90,78,55,45,70,88,60,92] 

}) 
print("First five rows of the dataframe") 
print(data.head()) 
bins=[0,40,55,70,85,100] 
labels=["poor","below_average","average","above_average","excellent"] 
data["marks_category"]=pd.cut(data["marks"],bins=bins,labels=labels,include_lowest=Tr 



ue) 
print("\n Top two rows with 'marks_category' column:") 
print(data[["marks","marks_category"]].head(10)) 

 
Output :- 
First five rows of the dataframe 

roll_no marks 
0 1 85 
1 2 65 
2 3 90 
3 4 78 
4 5 55 

 
Top two rows with 'marks_category' column: 
 marks marks_category 
0 85 above_average 
1 65 average 
2 90 excellent 
3 78 above_average 
4 55 below_average 
5 45 below_average 
6 70 average 
7 88 excellent 
8 60 average 
9 92 excellent