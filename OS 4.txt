Practical No.:- 4 

Name :- Barhate Vivek Sandip  
Class :- T.Y.B.Sc (Computer Science) 
Div :- B 
Roll No. :- 04 
Batch :- C 
Subject :- Operating System - I 
Practical Name :- Demand Paging 
Performance Date :- Submission Date :- 
 
Set-A 
Que.) Write the simulation program to implement demand paging and show the page 
scheduling and total number of page faults for the following given page reference string. 
Give input n as the number of memory frames. 
Reference String : 12,15,12,18,6,8,11,12,19,12,6,8,12,15,19,8 
1) Implement FIFO 
2) Implement LRU 
Ans :- 
1) Implement FIFO 
Program :- 
#include<stdio.h> 
int prs[20],frm[10]={0}; 
int m[50][50]; 
int tp,tf,totpf=0,currp=0,currf=0; 
int i,j,pf; 
 
int chkpgfault() 
{ 

for(i=0;i<tf;i++) 
{ 

if(frm[i] == prs[currp]) 
{ 

break; 
} 

} 
if(i == tf) 
{ 

return -1; 
} 
else 
{ 

return i; 
} 

} 
void displayFrame() 



{ 
for(i=0;i<tf;i++) 
{ 

m[currp][i] = frm[i]; 
} 

} 
void main() 
{ 

printf("How many page references string :"); 
scanf("%d",&tp); 
printf("enter page references string:\n"); 
for(i=0;i<tp;i++) 
{ 

scanf("%d",&prs[i]); 
} 
printf("how many Frames:"); 
scanf("%d",&tf); 
while(currp<tp) 
{ 

pf=chkpgfault(); 
if(pf == -1) 
{ 

totpf++; 
frm[currf] = prs[currp]; 
currf++; 
if(currf == tf) 
currf = 0; 

} 
displayFrame(); 
currp++; 

} 
printf("\n frams \n"); 
for(i=0;i<tf;i++) 
{ 

for(j=0;j<tp;j++) 
{ 

printf("\t%d",m[j][i]); 
} 
printf("\n"); 

} 
printf("\nTotal page fault:%d",totpf); 

} 
 
Output :- 

How many page references string :12 



enter page references string: 
2 3 2 1 5 2 4 5 3 2 5 2 
how many Frames:3 
 
frams  

 2 2 2 2 5 5 5 5 3 3 3 3 
 0 3 3 3 3 2 2 2 2 2 5 5 
 0 0 0 1 1 1 4 4 4 4 4 2 
 
Total page fault:9 
 
2) Implement LRU 
Program :- 
#include<stdio.h> 
int prs[20],frm[10]={0}; 
int m[50][50]; 
int tp,tf,totpf=0,currp=0,currf=0; 
int i,j,pf,max,frmno,cnt; 

int chkpgfault() 
{ 

for(i=0;i<tf;i++) 
{ 

if(frm[i] == prs[currp]) 
{ 

break; 
} 

} 
if(i == tf) 
{ 

return -1; 
} 
else 
{ 

return i; 
} 

} 
void displayFrame() 
{ 

for(i=0;i<tf;i++) 
{ 

m[currp][i] = frm[i]; 
} 

} 
int nextFrame() 
{ 



max = 0; 
frmno = 0; 
for(i=0;i<tf;i++) 
{ 

cnt = 0; 
for(j=currp-1;j>=0;j--) 
{ 

if(frm[i]==prs[j]) 
break; 

else 
cnt++; 

} 
if(max<cnt) 
{ 

max = cnt; 
frmno = i; 

} 
} 
return frmno; 

} 
void main() 
{ 

printf("How many page references string :"); 
scanf("%d",&tp); 
printf("enter page references string:\n"); 
for(i=0;i<tp;i++) 
{ 

scanf("%d",&prs[i]); 
} 
printf("how many Frames:"); 
scanf("%d",&tf); 
while(currp<tp) 
{ 

pf=chkpgfault(); 
if(pf == -1) 
{ 

totpf++; 
currf = nextFrame(); 
frm[currf] = prs[currp]; 

} 
displayFrame(); 
currp++; 

} 
printf("\n frams \n"); 
for(i=0;i<tf;i++) 
{ 



for(j=0;j<tp;j++) 
{ 

printf("\t%d",m[j][i]); 
} 
printf("\n"); 

} 
printf("\nTotal page fault:%d",totpf); 

} 
 
Output :- 

How many page references string :12 
enter page references string: 
2 3 2 1 5 2 4 5 3 2 5 2 
how many Frames:3 
 
frams  

 2 2 2 2 2 2 2 2 3 33 3 
 0 3 3 3 5 5 5 5 5 55 5 
 0 0 0 1 1 1 4 4 4 22 2 
 
Total page fault:7 
 
Set-B 
 
Que.) Write the simulation program to implement demand paging and show the page 
scheduling and total number of page faults for the following given page reference string. 
Give input n as the number of memory frames. 
Reference String : 12,15,12,18,6,8,11,12,19,12,6,8,12,15,19,8 

1) Implement OPT 
 
Program :- 
#include<stdio.h> 
int prs[20],frm[10]={0}; 
int m[50][50]; 
int tp,tf,totpf=0,currp=0,currf=0; 
int i,j,pf,max,frmno,cnt; 
 

int chkpgfault() 
{ 

for(i=0;i<tf;i++) 
{ 

if(frm[i] == prs[currp]) 
{ 

break; 
} 



} 
 

if(i==tf) 
{ 

 return -1; 
}  
else  
{  

 return i; 
} 

} 
 

void displayFrame() 
{ 

for(i=0;i<tf;i++) 
{ 

m[currp][i] = frm[i]; 
} 

} 
 

int nextFrame() 
{ 

max = 0; 
frmno = 0; 

for(i=0;i<tf;i++) 
{ 

cnt = 0; 
for(j=currp+1;j<=tp;j++) 
{ 

if(frm[i] == prs[j]) 
break; 

else 
cnt++; 

} 
 

if(cnt>max) 
{ 

 max = cnt; 
 frmno = i; 

} 
} 

return frmno; 
} 

void main() 
{ 



printf("How many Page References String :"); 
scanf("%d",&tp); 

 
printf("\nEnter Page References String :\n"); 

for(i=0;i<tp;i++) 
{ 

scanf("%d",&prs[i]); 
} 

printf("\nHow many Frames:\n"); 
scanf("%d",&tf); 

 
while(currp<tp) 
{ 

pf = chkpgfault(); 
if(pf== -1) 
{ 

totpf++; 
currf = nextFrame(); 
frm[currf] = prs[currp]; 

} 
displayFrame(); 
currp++; 

} 
 

printf("\n\tFrames\t\n"); 

for(i=0;i<tf;i++) 
{ 

for(j=0;j<tp;j++) 
{ 

printf("%d ",m[j][i]); 
} 

printf("\n"); 
} 

 
printf("\nTotal Page Fault:%d\n",totpf); 

 
} 

 
Output:- 

How many Page References String :16 

Enter Page References String : 
12 15 12 18 6 8 11 12 19 12 6 8 12 15 19 8 



How many Frames: 
3 
 

Frames 
12 12 12 12 12 12 12 12 12 12 12 12 12 15 15 15 
0 15 15 15 15 8 11 11 19 19 19 19 19 19 19 19 
0 0 0 18 6 6 6 6 6 6 6 8 8 8 8 8 
 
Total Page Fault:9 
 
Set-C 
Que.) Write the simulation program to implement demand paging and show the page 
scheduling and total number of page faults for the following given page reference string. 
Give input n as the number of memory frames. 
Reference String: 2,5,2,8,5,4,1,2,3,2,6,1,2,5,9,8 

1) Implement MRU 
 
Program :- 
#include<stdio.h> 
int prs[20],frm[10]={0}; 
int m[50][50]; 
int tp,tf,totpf=0,currp=0,currf=0; 
int i,j,pf,max,frmno,cnt; 
 

int chkpgfault() 
{ 

for(i=0;i<tf;i++) 
{ 

if(frm[i] == prs[currp]) 
{ 

break; 
} 

} 

if(i==tf) 
{ 

 return -1; 
}  
else  
{  

 return i; 
} 

} 
 

void displayFrame() 
{ 



for(i=0;i<tf;i++) 
{ 

m[currp][i] = frm[i]; 
} 

} 
 

int nextFrame() 
{ 

max = 0; 
frmno = 0; 

for(i=0;i<tf;i++) 
{ 

cnt = 0; 
for(j=currp-1;j>=0;j--) 
{ 

if(frm[i] == prs[j]) 
break; 

else 
cnt++; 

} 
 

if(max>cnt) 
{ 

 max = cnt; 
 frmno = i; 

} 
} 

return frmno; 
} 

 
void main() 
{ 
printf("How many Page References String :"); 
scanf("%d",&tp); 

 
printf("\nEnter Page References String :\n"); 

for(i=0;i<tp;i++) 
{ 

scanf("%d",&prs[i]); 
} 

printf("\nHow many Frames:\n"); 
scanf("%d",&tf); 

while(currp<tp) 
{ 

pf = chkpgfault(); 



if(pf== -1) 
{ 

totpf++; 
currf = nextFrame(); 
frm[currf] = prs[currp]; 

} 
displayFrame(); 
currp++; 

} 

printf("\n\tFrames\t\n"); 

for(i=0;i<tf;i++) 
{ 

for(j=0;j<tp;j++) 
{ 

printf("%d ",m[j][i]); 
} 

printf("\n"); 
} 

 
printf("\nTotal Page Fault:%d\n",totpf); 

 
} 

 
Output:- 

How many Page References String :16 
Enter Page References String : 
2 5 2 8 5 4 1 2 3 2 6 1 2 5 9 8 
How many Frames: 
3 

Frames 
2 5 2 8 5 4 1 2 3 2 6 1 2 5 9 8 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
 
Total Page Fault:16